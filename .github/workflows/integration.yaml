name: "Integration workflow"
on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_package:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Setup node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Resolve yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache 
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build the package
        run: yarn run pack

      - name: Resolve package file path
        id: resolve-package-file
        run: echo "::set-output name=path::$(find . -name *.tgz)"

      - name: Upload the package
        uses: actions/upload-artifact@v1
        with:
          name: package
          path: ${{ steps.resolve-package-file.outputs.path }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_ORG_READER_TOKEN }}

  test_package:
    name: Test package
    runs-on: ubuntu-latest
    needs:
      - build_package
    steps:
      - name: Setup node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

  publish_package:
    name: Publish package
    runs-on: ubuntu-latest
    needs:
      - build_package
      - test_package
